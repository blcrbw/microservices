version: "3"

networks:
  platform:
    driver: bridge

services:
  go-producer:
    build: ./producer
    hostname: go-producer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - platform
    volumes:
      - ./producer:/app
    env_file:
      - .env

  go-consumer:
    build: ./consumer
    hostname: go-consumer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - platform
    volumes:
      - ./consumer:/app
    env_file:
      - .env

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: always
    networks:
      - platform

  pgadmin:
    container_name: pgadmin
    hostname: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
    restart: always
    networks:
      - platform

  kafka-0:
    image: 'bitnami/kafka:latest'
    hostname: kafka-0
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_BROKER_ID=0
    networks:
      - platform
    volumes:
      - ./storage/kafka-0:/bitnami/kafka
    env_file:
      - .env

  kafka-1:
    image: 'bitnami/kafka:latest'
    hostname: kafka-1
    ports:
      - '19092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_BROKER_ID=1
    networks:
      - platform
    volumes:
      - ./storage/kafka-1:/bitnami/kafka
    env_file:
      - .env

  kafka-2:
    image: 'bitnami/kafka:latest'
    hostname: kafka-2
    ports:
      - '29092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_BROKER_ID=2
    networks:
      - platform
    volumes:
      - ./storage/kafka-2:/bitnami/kafka
    env_file:
      - .env